<!-- <section class="">
  <div class="container d-flex justify-content-center">
    <div class="row w-75 mt-5">
      <div class="col-md-12">
        <h2 class="text-center">Add Product</h2>
        <form
          action="/admin/add-product"
          method="POST"
          enctype="multipart/form-data"
        >
          <label for="">Product Name</label>
          <input type="text" name="name" class="form-control" />
          <label for="">Description</label>
          <input type="text" name="description" class="form-control" />

          <label for="">Quantity</label>
          <input type="text" name="quantity" class="form-control" /> -->


          <!-- <label for="">Category</label>
          <input type="text" name="category" class="form-control" /> -->


          <!-- <label for="">Price</label>
          <input type="text" name="Price" class="form-control" />

           <label for="">Category</label>

           <select class="form-select" name="category" id="cars">
            <% availCategory.forEach(function(availCategory,index) { %>
                <option value="<%= availCategory.CategoryName%>">
                  <%= availCategory.CategoryName%>
                </option>
                <% }) %>
              </select> -->
                  
    
    
    
              <!-- <select class="form-select" name="category" id="cars">
                <option value="volvo">Volvo</option>
              </select> -->
              <!-- <label for="">Brand</label>
              <select class="form-select" name="category" id="cars">
                <option value="volvo">Volvo</option>
              </select> -->
    
              <!-- <label for="">Image</label>
              <input type="file" name="Image" class="form-control" />
    
              <button type="submit" class="btn btn-success mt-4">Submit</button>
            </form>
          </div>
        </div>
      </div>
    </section> -->
    
    
    <!-- <section class="">
      <div class="container d-flex justify-content-center">
        <div class="row w-75 mt-5">
          <div class="col-md-12">
            <h2 class="text-center">Add Product</h2>
            <form
              action="/admin/add-product"
              method="POST"
              enctype="multipart/form-data"
              onsubmit="return validateForm()"
            >
              <label for="name">Product Name</label>
              <input type="text" id="name" name="name" class="form-control" required />
              
              <label for="description">Description</label>
              <input type="text" id="description" name="description" class="form-control" required />
    
              <label for="quantity">Quantity</label>
              <input type="number" id="quantity" name="quantity" class="form-control" required />
    
              <label for="price">Price</label>
              <input type="number" id="price" name="price" class="form-control" required />
    
              <label for="category">Category</label>
              <select class="form-select" id="category" name="category" required>
                <% availCategory.forEach(function(availCategory,index) { %>
                <option value="<%= availCategory.CategoryName%>">
                  <%= availCategory.CategoryName%>
                </option>
                <% }) %>
              </select>
    
              <label for="image">Image</label>
              <input type="file" id="image" name="image" class="form-control" required />
              <label for="image">Image</label>
              <input type="file" id="image" name="image" class="form-control" required />
              <label for="image">Image</label>
              <input type="file" id="image" name="image" class="form-control" required />
    
              <label for="image">Image</label>
              <input type="file" id="image" name="image" class="form-control" required />
    
    
    
              <button type="submit" class="btn btn-success mt-4">Submit</button>
              
            </form>
          </div>
        </div>
      </div>
    </section>
    
    
     -->
    
     <section class="content-main">
      <form action="/admin/add-product" 
            method="POST"
            enctype="multipart/form-data" 
            onsubmit="return validateForm()">
                   <div class="row">
                       
                      <div class="col-9">
                          <div class="content-header">
                              <h2 class="content-title">Add New Product</h2>
      
                            
                           
                              <div>
                                
                              </div>
                          </div>
                      </div>
                      <div class="col-lg-6">
                          <div class="card mb-4">
                              <div class="card-header">
                                  <h4>Basic</h4>
                              </div>
                              <div class="card-body">
                                 
                                      <div class="mb-4">
                                          <label for="name" class="form-label">Product Name</label>
                                          <input type="text" id="name" placeholder="Title" class="form-control" name="name" required>
                                          <div id="titleError" class="invalid-feedback"></div>
                                      </div>
                                      <div class="mb-4">
                                          <label class="form-label" for="description">Description</label>
                                          <input type="text" id="description" name="description" class="form-control" required />
                                          <div id="descriptionError" class="invalid-feedback"></div>
                                      </div>
                                      <div class="row">
                                          <div class="col-lg-4">
                                              <div class="mb-4">
                                                  <label class="form-label" for="price">Price</label>
                                                  <div class="row gx-2">
                                                      <input type="number" id="price" name="Price" class="form-control" required />
                                                      <div id="priceError" class="invalid-feedback"></div>
                                                  </div>
      <br>
                                                  <label class="form-label" for="quantity">Quantity</label>
                                                  <div class="row gx-2">
                                                      <input type="number" id="quantity" name="quantity" class="form-control" required />
                                                      <div id="stockError" class="invalid-feedback"></div>
                                                    </div>
      <br>
                                                  <label class="form-label" for="Category">Category</label>
                                                  <select class="form-select" id="category" name="category" required>
                                                    <div id="categoryError" class="invalid-feedback"></div>
                                                      <% availCategory.forEach(function(availCategory,index) { %>
                                                      <option value="<%= availCategory.CategoryName%>">
                                                        <%= availCategory.CategoryName%>
                                                      </option>
                                                      <% }) %>
                                                    </select>
      
      
                                              </div>
                                          </div>
                                          <div class="col-lg-4">
                                            
                                          </div>
                                       
                                      </div>
                                      
                                    
                                      <button type="submit" onclick="return validateForm()"class="btn btn-md rounded font-sm hover-up" >Submit</button>
                                  
                              </div>
                          </div> <!-- card end// -->
                         
                      </div>
                      <div class="col-lg-3">
                          <div class="card mb-4">
                              <div class="card-header">
                                  <h4>Media</h4>
                              </div>
                              <div class="card-body">
                                  <div class="input-upload"> 
                                      <img src="/assets/imgs/theme/upload.svg" alt="" id="img1">
                                      <!-- <input class="form-control" name="image1" type="file" multiple> -->
                                  </div>
                              </div>
                          </div> <!-- card end// -->
                         
                          <!-- card end// -->
      
                          <div class="card mb-4">
                              <div class="card-header">
                                  <h4>Media</h4>
                              </div>
                              <div class="card-body">
                                  <!-- <div class="input-upload">
                                      <img src="/assets/imgs/theme/upload.svg" alt="" id="img2">
                                      <input class="form-control" onchange="function5(event)" name="images" type="file" multiple required>                     
                                   </div> -->
                        <div class=" mb-4 input-upload">
                          <label for="id_image"></label><br>
                            <img src="/admin-assets/imgs/theme/upload.svg" alt="" id="img2">
                            <input class="form-control" onchange="function5(event)" data-bs-toggle="modal" data-bs-target="#exampleModal" type="file" id="id_image" name="images" accept="image/*" multiple><br>
                          </div>
                              </div>
                          </div>
      
                          
                      </div>
                      <div class="col-lg-3">
                          <div class="card mb-4">
                              <div class="card-header">
                                  <h4>Media</h4>
                              </div>
                              <div class="card-body">
                                  <div class="input-upload">
                                      <img src="/assets/imgs/theme/upload.svg" alt="" id="img3"> 
                                      <!-- <input class="form-control" name="image3" type="file" multiple> -->
                                   </div>
                              </div>
                          </div>     
      
                         
                          <!-- card end// -->
      
                          <div class="card mb-4">
                              <div class="card-header">
                                  <h4>Media</h4>
                              </div>
                              <div class="card-body">
                                  <div class="input-upload">
                                      <img src="/assets/imgs/theme/upload.svg" alt="" id="img4">
                                      <!-- <input class="form-control" name="image4" type="file" multiple> -->
                                  </div>
                              </div>
                          </div>
                    
                      </div> 
                
      
                      
                  </div>
                  </form>
                  <!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
aria-hidden="true">
<div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
            <div class="modal-header border-bottom-0">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
        </div>
        <div class="modal-body">
            <div class="form-group row" id="test">
            </div>
        </div>
        <div class="modal-header text-center">
            <button class="btn btn-success" type="button" data-bs-dismiss="modal" aria-label="Close">Save
                Changes</button>
        </div>
    </div>
   </div>
</div>
                  
              </section>
      
            
                <script>
                  
                  function hideDiv() {
        document.getElementById('alert').style.display = 'none';
      }
      
      setTimeout(hideDiv, 1000); // Hide the div after 3 seconds (3000 milliseconds)
                  function function5(event){
                  document.getElementById('img1').src=URL.createObjectURL(event.target.files[0] )
                  document.getElementById('img2').src=URL.createObjectURL(event.target.files[1])
                document.getElementById('img3').src=URL.createObjectURL(event.target.files[2])
                document.getElementById('img4').src=URL.createObjectURL(event.target.files[3])
               
              }
      
                </script>
      
      <script>
        function validateForm() {
          var title = document.getElementById("name").value.trim();
          var description = document.getElementById("description").value.trim();
          var price = document.getElementById("price").value.trim();
          var stock = document.getElementById("quantity").value.trim();
          var category = document.getElementsByName("category")[0].value;
          
          var isValid = true;
          
          // Check if title is not empty
          if (title == "") {
            document.getElementById("name").classList.add("is-invalid");
            document.getElementById("titleError").innerHTML = "Please enter a title.";
            isValid = false;
          } else {
            document.getElementById("name").classList.remove("is-invalid");
            document.getElementById("titleError").innerHTML = "";
          }
          
          // Check if description is not empty
          if (description == "") {
            document.getElementById("description").classList.add("is-invalid");
            document.getElementById("descriptionError").innerHTML = "Please enter a description.";
            isValid = false;
          } else {
            document.getElementById("description").classList.remove("is-invalid");
            document.getElementById("descriptionError").innerHTML = "";
          }
          
          // Check if price is a valid number
          if (isNaN(price) || price == "" || price < 0) {
            document.getElementById("price").classList.add("is-invalid");
            document.getElementById("priceError").innerHTML = "Please enter a valid price.";
            isValid = false;
          } else {
            document.getElementById("price").classList.remove("is-invalid");
            document.getElementById("priceError").innerHTML = "";
          }
          
          // Check if stock is a valid number
          if (isNaN(stock) || stock == "" || stock < 0) {
            document.getElementById("quantity").classList.add("is-invalid");
            document.getElementById("stockError").innerHTML = "Please enter a valid stock quantity.";
            isValid = false;
          } else {
            document.getElementById("quantity").classList.remove("is-invalid");
            document.getElementById("stockError").innerHTML = "";
          }
          
          // Check if category is selected
          if (category == "") {
            document.getElementsByName("category")[0].classList.add("is-invalid");
            document.getElementById("categoryError").innerHTML = "Please select a category.";
            isValid = false;
          } else {
            document.getElementsByName("category")[0].classList.remove("is-invalid");
            document.getElementById("categoryError").innerHTML = "";
          }
          
          return isValid;
        }
      </script>
      <script>
        const input = document.getElementById('id_image')
        const test = document.getElementById('test')
        input.addEventListener('change', () => {
            // Getting image file object from the input variable
            const img_data = []
            const imagebox = []
            const crop_btn = []
            const confirm_btn = []
            const url = []
            const length = input.files.length
            for (i = 0; i < length; i++) {
                test.innerHTML += `<div class="col-4"><div id="image-box${i}" class="image-container" style="height: 350px; width: 350px;"> </div>
        <button class="btn btn-outline-info" id="crop-btn${i}" style="width: 100%; margin-top: 10px; display: block;" type="button">Crop</button> </div>`
            }
            for (i = 0; i < length; i++) {
                img_data[i] = input.files[i]
            }
    
            img_data.forEach((image_data, i) => {
                url[i] = URL.createObjectURL(image_data)
            })
            // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
            // The new object URL represents the specified File object or Blob object.
            url.forEach((url, i) => {
                document.getElementById('image-box' + i).innerHTML = `<img src="${url}" id="image${i}" style="width:100%;">`
            })
    
            // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
    
            // Storing that cropping view image in a variable
    
    
            // Displaying the image box
            for (i = 0; i < length; i++) {
                document.getElementById('image-box' + i).style.display = 'block'
                document.getElementById('crop-btn' + i).style.display = 'block'
            }
    
    
            for (i = 0; i < length; i++) {
                cropper(img_data[i], document.getElementById('image' + i), i, document.getElementById('crop-btn' + i), document.getElementById('image-box' + i))
            }
    
    
    
            // Creating a croper object with the cropping view image
            // The new Cropper() method will do all the magic and diplay the cropping view and adding cropping functionality on the website
            // For more settings, check out their official documentation at https://github.com/fengyuanchen/cropperjs
            let container = new DataTransfer();
            let fileInputElement = document.getElementById('id_image');
    
    
    
            function cropper(img_data, image, index, crop_btn, imagebox) {
              
                const cropper = new Cropper(image, {
                    autoCropArea: 1,
                    viewMode: 1,
                    scalable: false,
                    zoomable: false,
                    movable: false,
                    minCropBoxWidth: 50,
                    minCropBoxHeight: 50,
                })
    
                // When crop button is clicked this event will get triggered
                crop_btn.addEventListener('click', () => {
                    // This method coverts the selected cropped image on the cropper canvas into a blob object
                    cropper.getCroppedCanvas().toBlob((blob) => {
    
                        // Gets the original image data
                        // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
                        let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
                        // Create a new container
    
                        // Add the cropped image file to the container
                        container.items.add(file);
    
                        fileInputElement.files = container.files
    
                        // Replace the original image file with the new cropped image file
    
    
    
                        // Hide the cropper box
                        imagebox.style.display = 'none'
                        // Hide the crop button
                        crop_btn.style.display = 'none'
                    });
                });
            }
        });
    </script>